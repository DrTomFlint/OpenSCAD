module TenBuck1Purple_1()
{
 /* Generated by trace2scad version 20150415
    http://aggregate.org/MAKE/TRACE2SCAD/
    Optimized model has 415/848 original points
 */
 color([0.5, 0.5, 0.5])
 assign(minx=0) /* polygon minx=0 */
 assign(miny=0) /* polygon miny=0 */
 assign(maxx=17640) /* polygon maxx=17640 */
 assign(maxy=20000) /* polygon maxy=20000 */
 assign(dx=maxx-minx)
 assign(dy=maxy-miny)
 assign(maxd=((dx>dy)?dx:dy))
 scale([1/maxd, 1/maxd, 1])
 translate([-minx-dx/2, -miny-dy/2, 0])
 linear_extrude(height=1, convexity=415)
 union() {
  union() {
   polygon([[0,19608],[0,19215],[184,19215],[191,19225],[227,19225],[263,19236],[280,19245],[295,19245],[313,19254],[358,19266],[428,19301],[448,19320],[458,19320],[477,19340],[486,19340],[516,19363],[651,19493],[663,19514],[728,19613],[749,19658],[771,19733],[780,19750],[780,19769],[790,19776],[790,19824],[800,19831],[800,20000],[0,20000]], convexity=5);
   polygon([[16847,19894],[16849,19788],[16859,19733],[16876,19678],[16885,19660],[16885,19641],[16895,19634],[16895,19616],[16943,19530],[16970,19493],[16970,19482],[16990,19463],[16990,19452],[17123,19320],[17133,19320],[17152,19300],[17163,19300],[17218,19261],[17288,19225],[17304,19225],[17311,19215],[17330,19215],[17348,19206],[17405,19189],[17411,19180],[17454,19180],[17461,19170],[17640,19170],[17640,20000],[16845,20000]], convexity=15);
   polygon([[4426,13249],[4421,13244],[4393,13244],[4370,13230],[4351,13230],[4344,13220],[4321,13220],[4314,13210],[4243,13210],[4168,13189],[4118,13164],[4083,13139],[4060,13118],[4030,13060],[4030,13047],[3999,13018],[3985,12990],[3941,12990],[3934,13000],[3911,13000],[3904,12990],[3885,12990],[3853,12974],[3814,12938],[3794,12893],[3781,12878],[3755,12830],[3755,12811],[3745,12804],[3745,12771],[3736,12765],[3729,12723],[3724,12643],[3715,12633],[3715,12581],[3705,12574],[3705,12441],[3695,12434],[3695,12271],[3704,12265],[3718,12163],[3735,12118],[3735,12091],[3745,12084],[3745,12067],[3810,11940],[3810,11911],[3820,11904],[3820,11887],[3835,11858],[3911,11783],[3938,11744],[3949,11723],[4062,11610],[4073,11610],[4097,11585],[4198,11535],[4228,11504],[4265,11485],[4284,11485],[4291,11475],[4310,11475],[4345,11455],[4364,11455],[4371,11445],[4463,11445],[4483,11431],[4573,11426],[4615,11419],[4621,11410],[4693,11410],[4703,11400],[5298,11404],[5340,11411],[5346,11420],[5384,11420],[5391,11430],[5410,11430],[5434,11445],[5537,11485],[5564,11485],[5571,11495],[5589,11495],[5646,11525],[5659,11525],[5716,11554],[5733,11568],[5783,11592],[5898,11695],[5908,11695],[5974,11763],[5981,11793],[6033,11873],[6048,11910],[6051,11923],[6066,12045],[6075,12051],[6075,12104],[6065,12111],[6065,12185],[6056,12203],[6044,12248],[6035,12265],[6035,12279],[6010,12323],[6010,12424],[6001,12430],[5996,12468],[5987,12498],[5938,12593],[5937,12609],[5903,12678],[5763,12820],[5751,12820],[5738,12835],[5697,12855],[5684,12870],[5670,12870],[5631,12905],[5621,12905],[5608,12920],[5567,12940],[5554,12955],[5542,12955],[5518,12981],[5480,13000],[5470,13000],[5416,13025],[5410,13034],[5310,13085],[5300,13085],[5197,13135],[5181,13135],[5174,13145],[5143,13145],[5123,13160],[5101,13160],[5094,13170],[5075,13170],[5040,13190],[5021,13190],[5014,13200],[4995,13200],[4978,13209],[4902,13230],[4825,13230],[4800,13246],[4800,13240],[4770,13255],[4432,13255]], convexity=48);
   polygon([[11263,11569],[11233,11559],[11215,11550],[11196,11550],[11189,11540],[11161,11540],[11148,11525],[11103,11526],[11018,11491],[10985,11457],[10965,11418],[10965,11401],[10953,11391],[10918,11386],[10848,11368],[10809,11344],[10796,11349],[10778,11335],[10756,11335],[10749,11325],[10726,11325],[10720,11316],[10640,11304],[10634,11295],[10611,11295],[10604,11285],[10581,11285],[10574,11275],[10556,11275],[10503,11248],[10395,11143],[10395,11133],[10366,11103],[10351,11058],[10320,10999],[10320,10982],[10311,10973],[10306,10873],[10299,10830],[10290,10824],[10290,10791],[10280,10784],[10280,10441],[10290,10434],[10290,10376],[10300,10369],[10300,10350],[10309,10333],[10321,10288],[10330,10270],[10330,10174],[10342,10153],[10340,10107],[10355,10094],[10355,10073],[10394,9993],[10400,9964],[10441,9920],[10452,9920],[10483,9891],[10533,9866],[10568,9855],[10634,9855],[10641,9845],[10749,9845],[10756,9835],[11124,9835],[11131,9845],[11209,9845],[11216,9855],[11364,9855],[11371,9865],[11429,9865],[11436,9875],[11459,9875],[11466,9885],[11514,9885],[11521,9895],[11550,9895],[11575,9911],[11588,9906],[11613,9920],[11654,9920],[11661,9930],[11684,9930],[11691,9940],[11708,9940],[11808,9989],[11821,10005],[11833,10005],[11862,10035],[11874,10035],[11886,10050],[11943,10077],[11995,10127],[11995,10138],[12018,10160],[12028,10160],[12070,10203],[12070,10214],[12085,10227],[12105,10269],[12114,10275],[12130,10307],[12130,10324],[12140,10331],[12140,10351],[12165,10395],[12165,10414],[12175,10421],[12175,10834],[12165,10841],[12165,10893],[12151,10917],[12156,10930],[12140,10955],[12140,10969],[12121,11008],[12110,11043],[12110,11069],[12100,11076],[12100,11095],[12070,11155],[12070,11167],[12014,11278],[11995,11298],[11995,11305],[11960,11377],[11884,11465],[11872,11465],[11848,11491],[11800,11509],[11782,11515],[11765,11515],[11658,11569],[11622,11580],[11293,11579]], convexity=57);
   polygon([[17458,775],[17454,770],[17419,770],[17353,749],[17335,740],[17316,740],[17309,730],[17287,730],[17218,694],[17200,678],[17181,668],[17113,621],[16993,496],[16970,466],[16970,457],[16950,438],[16950,428],[16931,408],[16896,338],[16884,293],[16875,275],[16875,260],[16866,243],[16855,207],[16855,171],[16845,164],[16845,0],[17640,0],[17640,780],[17461,780]], convexity=20);
   polygon([[0,380],[0,0],[760,0],[760,144],[750,151],[750,194],[740,201],[740,224],[730,231],[730,253],[715,272],[715,294],[705,301],[705,317],[670,389],[655,401],[655,413],[635,432],[635,444],[610,474],[610,483],[482,610],[474,610],[444,635],[432,635],[413,655],[401,655],[389,670],[317,705],[301,705],[294,715],[272,715],[253,730],[231,730],[224,740],[201,740],[194,750],[151,750],[144,760],[0,760]], convexity=21);
  }
 }
}

module TenBuck1Purple()
{
 /* all layers combined, scaled to within a 1mm cube */
 scale([1, 1, 1/1])
 difference() {
  union() {
   scale([1,1,2]) translate([0,0,-0.5]) TenBuck1Purple_1();
  }
  translate([0,0,-2]) cube([2,2,4],center=true);
 }
}
