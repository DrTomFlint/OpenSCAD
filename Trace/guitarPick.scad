module guitarPick_1()
{
 /* Generated by trace2scad version 20150415
    http://aggregate.org/MAKE/TRACE2SCAD/
    Optimized model has 406/1933 original points
 */
 color([0.5, 0.5, 0.5])
 assign(minx=4154) /* polygon minx=4154 */
 assign(miny=4168) /* polygon miny=4168 */
 assign(maxx=16111) /* polygon maxx=16111 */
 assign(maxy=15555) /* polygon maxy=15555 */
 assign(dx=maxx-minx)
 assign(dy=maxy-miny)
 assign(maxd=((dx>dy)?dx:dy))
 scale([1/maxd, 1/maxd, 1])
 translate([-minx-dx/2, -miny-dy/2, 0])
 linear_extrude(height=1, convexity=406)
 union() {
  union() {
   polygon([[9739,15545],[9711,15536],[9468,15372],[9325,15215],[9068,14868],[8838,14598],[8728,14431],[8405,13839],[8260,13625],[8272,13594],[8445,13632],[8788,13720],[9397,13780],[9469,13827],[9602,14024],[9978,14311],[10115,14370],[10203,14328],[10343,14196],[10659,13808],[10848,13505],[11047,13213],[11223,12978],[11572,12423],[11691,12123],[11787,11965],[11879,11480],[11858,11118],[11908,11050],[12333,10876],[12628,10776],[12929,10645],[12975,10660],[12990,10699],[12915,11420],[12928,11633],[12855,12254],[12750,12553],[12407,13179],[12261,13393],[12167,13684],[11978,13968],[11509,14503],[11254,14723],[11046,14946],[10705,15223],[10438,15440],[10298,15471],[10063,15478],[9901,15543],[9768,15554]], convexity=12);
   polygon([[10043,13445],[9963,13441],[9028,13405],[8648,13346],[8053,13171],[7773,12987],[7658,12894],[7253,12703],[6903,12420],[6728,12278],[6291,11835],[6040,11495],[5753,11078],[5555,10618],[5474,10228],[5420,10039],[5398,9825],[5339,9540],[5356,9107],[5389,8887],[5417,8877],[5520,8988],[6023,9556],[6613,10063],[6665,10184],[6713,10483],[6786,10673],[6992,10981],[7465,11548],[7744,11856],[8013,11980],[8593,12167],[9173,12292],[9688,12362],[10538,12340],[10728,12309],[11013,12301],[11268,12265],[11306,12307],[11218,12473],[10808,13063],[10638,13256],[10428,13425],[10373,13447],[10123,13449]], convexity=8);
   polygon([[13133,12580],[13124,12570],[13245,12090],[13280,11720],[13288,11490],[13343,11418],[13594,11220],[13743,10994],[13938,10773],[14067,10548],[14215,10073],[14261,9873],[14242,9710],[14228,9653],[14220,9183],[14176,8938],[14053,8553],[13686,7668],[13419,7258],[13213,7045],[13102,6942],[12995,6771],[13000,6726],[13025,6709],[13533,6660],[14068,6618],[14153,6636],[14218,6693],[14337,6936],[14457,7113],[14623,7254],[14796,7613],[15040,8337],[15068,8575],[15145,8775],[15180,9067],[15250,9408],[15252,9573],[15229,9743],[15213,10229],[15146,10443],[14934,10918],[14775,11130],[14523,11658],[14388,11813],[14185,11982],[14033,12106],[13563,12391],[13153,12590],[13142,12590]], convexity=8);
   polygon([[8943,11962],[8933,11959],[8382,11815],[7974,11655],[7910,11585],[7927,11523],[7957,11458],[7933,10650],[7933,10408],[8043,9715],[8172,9098],[8158,8932],[8145,8807],[8297,8408],[8576,7908],[8781,7635],[9527,6904],[9581,6879],[9646,6884],[9913,7027],[10640,7554],[10666,7609],[10649,7645],[10496,7788],[10392,7894],[10213,8024],[10030,8223],[9679,8638],[9279,9198],[9083,9608],[9082,9733],[8991,10013],[8924,10770],[8925,10978],[8944,11345],[9001,11633],[9019,11939],[8974,11963],[8953,11964]], convexity=12);
   polygon([[9820,11033],[9782,11026],[9405,10927],[9329,10858],[9290,10640],[9299,10332],[9415,9851],[9458,9809],[9758,9858],[10348,9858],[10533,9825],[10848,9809],[11270,9673],[11460,9615],[11823,9529],[12000,9455],[12339,9331],[12593,9187],[12805,9068],[13033,8938],[13446,8633],[13654,8453],[13699,8465],[13826,8753],[13844,9028],[13897,9303],[13889,9559],[13850,9665],[13481,10002],[13247,10164],[12928,10344],[12343,10585],[12013,10702],[11753,10794],[11083,10963],[10683,11037],[9858,11039]], convexity=8);
   polygon([[7525,10200],[7498,10190],[7023,9929],[6601,9625],[6534,9615],[6208,9346],[5811,8915],[5440,8433],[5008,7854],[4780,7518],[4572,7133],[4484,6938],[4338,6797],[4228,6492],[4154,6230],[4172,6080],[4191,5958],[4175,5761],[4214,5623],[4341,5338],[4490,5134],[4570,5073],[4805,4989],[4950,4935],[5218,4855],[5448,4821],[5603,4779],[6093,4761],[6279,4724],[6428,4653],[7268,4665],[7423,4696],[7666,4710],[7680,4731],[7535,4837],[7178,5080],[6779,5393],[6496,5624],[6389,5655],[5888,5665],[5591,5759],[5270,5918],[5185,5995],[5174,6077],[5390,6609],[5806,7374],[5881,7424],[6247,7953],[6575,8252],[6645,8365],[6849,8534],[7800,9151],[7811,9192],[7660,9923],[7602,10198],[7553,10209]], convexity=10);
   polygon([[11825,9186],[11811,9172],[11781,9030],[11681,8790],[11584,8393],[11369,8031],[11085,7611],[10938,7429],[10149,6845],[9875,6673],[9811,6597],[9547,6455],[9135,6327],[8828,6244],[8663,6155],[8650,6121],[9113,5797],[9643,5482],[9761,5439],[9842,5457],[9992,5569],[10240,5683],[10398,5753],[10823,6077],[11121,6376],[11654,6852],[12311,7508],[12521,7843],[12635,8071],[12740,8454],[12766,8648],[12714,8745],[12628,8827],[12227,9074],[11862,9200],[11839,9200]], convexity=6);
   polygon([[15255,8045],[15247,8040],[15020,7419],[14826,7020],[14841,6940],[15007,6730],[15042,6643],[15031,6508],[14956,6397],[14848,6331],[14590,6278],[14144,6310],[14000,6344],[13463,6390],[13138,6431],[12571,6465],[12358,6562],[12013,6698],[11904,6686],[11413,6258],[11122,5974],[11131,5929],[11490,5770],[12078,5609],[12158,5571],[12623,5488],[13258,5389],[13418,5390],[14103,5310],[14655,5305],[15063,5347],[15543,5454],[15813,5592],[16006,5752],[16095,5893],[16111,6038],[16085,6250],[16066,6418],[16012,6597],[15924,7003],[15796,7283],[15583,7580],[15380,7894],[15289,8037],[15263,8050]], convexity=12);
   polygon([[6658,7947],[6643,7939],[6474,7788],[6276,7506],[6026,7123],[6011,7036],[6042,6934],[6305,6431],[6364,6351],[6757,5945],[6958,5751],[7192,5568],[7399,5410],[7790,5183],[8093,4977],[8458,4766],[8803,4608],[9475,4316],[9731,4253],[10238,4168],[11528,4176],[12108,4375],[12670,4681],[13069,5068],[13075,5115],[13032,5144],[12158,5286],[11813,5346],[11678,5325],[11478,5219],[11283,5044],[11065,4961],[10893,4929],[10408,4940],[9941,5032],[9655,5157],[9249,5392],[8694,5737],[8463,5893],[8008,6167],[7403,6789],[7271,6929],[7170,7068],[6870,7639],[6727,7934],[6690,7955],[6673,7955]], convexity=8);
  }
 }
}

module guitarPick()
{
 /* all layers combined, scaled to within a 1mm cube */
 scale([1, 1, 1/1])
 difference() {
  union() {
   scale([1,1,2]) translate([0,0,-0.5]) guitarPick_1();
  }
  translate([0,0,-2]) cube([2,2,4],center=true);
 }
}
guitarPick();
